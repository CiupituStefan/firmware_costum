/* Versiune Keymap - Curățată */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define FN_LAYER 1

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &kp ESC      &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6       &kp F7       &kp F8       &kp F9       &kp F10      &kp F11      &kp F12
                &kp GRAVE    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &kp N6       &kp N7       &kp N8       &kp N9       &kp N0       &kp MINUS    &kp EQUAL    &kp BSPC
                &kp TAB      &kp Q        &kp W        &kp E        &kp R        &kp T        &kp Y        &kp U        &kp I        &kp O        &kp P        &kp LBKT     &kp RBKT     &kp BSLH
                &kp CAPS     &kp A        &kp S        &kp D        &kp F        &kp G        &kp H        &kp J        &kp K        &kp L      &kp SEMI     &kp SQT      &kp RET
                &kp LSHFT    &kp Z        &kp X        &kp C        &kp V        &kp B        &kp N        &kp M        &kp COMMA    &kp DOT      &kp FSLH     &kp RSHFT
                &kp LCTRL    &kp LGUI     &kp LALT     &kp SPACE    &kp RALT     &kp RGUI     &mo FN_LAYER &kp RCTRL
            >;
        };
        fn_layer {
            bindings = <
                &trans   &cp C_BRI_DEC  &cp C_BRI_INC  &cp C_AC_DESKTOP_SHOW_ALL_WINDOWS &kp DEL      &kp PSCRN    &cp C_AL_WWW &cp C_PREVIOUS &cp C_PLAY_PAUSE &cp C_NEXT     &cp C_MUTE &cp C_VOL_DN &cp C_VOL_UP
                &trans   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_TOG &out OUT_BLE   &out OUT_USB   &bt BT_NXT     &bt BT_CLR     &trans       &trans       &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans
            >;
        };
    };
};